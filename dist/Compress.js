let e=Buffer.from("Yaz0\0\0\0\0\0\0\0\0\0\0\0\0","binary");function t(e,t,n){let f=t>>8,r=255&t;return e.push(n<18?[f|n-2<<4,r]:[f,r,n-18]),n}function n(e,t,n){let f=t-2,r=t-1,l=0,u=0;for(let h=1;h<=n&&t-h;h++){if(e[t]!==e[t-h]||e[r]!==e[r-h]||e[f]!==e[f-h])continue;let n=3;for(;n<273&&t-n&&e[t-n]===e[t-n-h];)n++;if(n>u&&(u=n,l=h-1,273===n))break}return[l,u]}export function compress(f,r=9,l=!1){let u=Buffer.from(e);return 0===f.length?u:(u.writeUInt32BE(f.length,4),f.length<4)?Buffer.concat([u,Buffer.from([255<<8-f.length]),f]):Buffer.concat([u,+r?function(e,f,r){let l=[],u=e.length-1;for(;u>=0;){if(u<3){l.push([e[u--]]),u>=0&&(l.push([e[u--]]),u>=0&&l.push([e[u--]]));break}let[h,o]=n(e,u,f);if(o){if(!r){let[r,h]=n(e,u-1,f);if(h>o){l.push([e[u--]]),u-=t(l,r,h);continue}}u-=t(l,h,o);continue}l.push([e[u--]])}let h=[],o=0;for(let e=1;e<=l.length;e++){e%8==1&&(h[o=h.length]=0);let t=l[l.length-e];h.push(...t),1===t.length&&(h[o]|=1<<7-(e+7)%8)}return Buffer.from(h)}(f,9>+r?4320*r/9-224:4096,l):function(e){let t=0,n=Buffer.alloc(Math.ceil(e.length/8)+e.length),f=0;for(;f<e.length;){f%8==0&&(n[t++]=f+7<e.length?255:255<<8-(e.length-f));for(let r=0;r<8&&f<e.length;r++)n[t++]=e[f++]}return n}(f)])}