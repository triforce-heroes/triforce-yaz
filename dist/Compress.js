let e=Buffer.from("Yaz0\0\0\0\0\0\0\0\0\0\0\0\0","binary");function t(e,t,n){let r=t>>8,f=255&t;return e.push(n<18?[r|n-2<<4,f]:[r,f,n-18]),n}function n(e,t,n){let r=t-2,f=t-1,l=0,u=0;for(let h=1;h<=n&&t-h;h++){if(e[t]!==e[t-h]||e[f]!==e[f-h]||e[r]!==e[r-h])continue;let n=3;for(;n<273&&t-n&&e[t-n]===e[t-n-h];)n++;if(n>u&&(u=n,l=h-1,273===n))break}return[l,u]}export function compress(r,f={}){let l=Buffer.from(e);if(0===r.length)return l;if(l.writeUInt32BE(r.length,4),r.length<4)return Buffer.concat([l,Buffer.from([255<<8-r.length]),r]);let u={level:9,fast:!1,...f};if(0===u.level||1>=Number(u.searchRange))return Buffer.concat([l,function(e){let t=0,n=Buffer.alloc(Math.ceil(e.length/8)+e.length),r=0;for(;r<e.length;){r%8==0&&(n[t++]=r+7<e.length?255:255<<8-(e.length-r));for(let f=0;f<8&&r<e.length;f++)n[t++]=e[r++]}return n}(r)]);let h=void 0!==u.searchRange&&u.searchRange<=4096?u.searchRange:9>+u.level?4320*u.level/9-224:4096;return Buffer.concat([l,function(e,r,f){let l=[],u=e.length-1;for(;u>=0;){if(u<3){l.push([e[u--]]),u>=0&&(l.push([e[u--]]),u>=0&&l.push([e[u--]]));break}let[h,o]=n(e,u,r);if(o){if(!f){let[f,h]=n(e,u-1,r);if(h>o){l.push([e[u--]]),u-=t(l,f,h);continue}}u-=t(l,h,o);continue}l.push([e[u--]])}let h=[],o=0;for(let e=1;e<=l.length;e++){e%8==1&&(h[o=h.length]=0);let t=l[l.length-e];h.push(...t),1===t.length&&(h[o]|=1<<7-(e+7)%8)}return Buffer.from(h)}(r,h,u.fast)])}